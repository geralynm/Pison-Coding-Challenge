
//Geralyn Moore, Pison Coding Challenge
//This program generates an arbitrary sine wave and sends 20 bytes over serial:
//Bytes 0-3: Timestamp in milliseconds (MSB->LSB)
//Bytes 4-11: 0
//Bytes 12-15: Sine wave data (MSB->LSB)
//Bytes 16-19: 0

//Throughout the process, I ran into a few issues; here is a brief rundown:
//1.  Finished first draft of code fairly quickly but was having trouble seeing output in Hub.
//    Attempted reading serial output from a terminal emulator - guessed USB dongle was interfering.
//    Switched computers, immediately saw output in Hub.   
//2.  Visible output in Hub, but received incorrect data with plotting and scaling errors.
//    Verified raw binary output using terminal emulator. Identified incorrect byte significance.
//    Slowed output to every 100ms and switched byte significance (originally LSB->MSB).

#define interval 100
  
const unsigned char sinewave_data[] = {
0x80,0x83,0x86,0x89,0x8c,0x8f,0x92,0x95,0x98,0x9c,0x9f,0xa2,0xa5,0xa8,0xab,0xae,
0xb0,0xb3,0xb6,0xb9,0xbc,0xbf,0xc1,0xc4,0xc7,0xc9,0xcc,0xce,0xd1,0xd3,0xd5,0xd8,
0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xed,0xef,0xf0,0xf2,0xf3,0xf5,
0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfc,0xfd,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfe,0xfd,0xfc,0xfc,0xfb,0xfa,0xf9,0xf8,0xf7,
0xf6,0xf5,0xf3,0xf2,0xf0,0xef,0xed,0xec,0xea,0xe8,0xe6,0xe4,0xe2,0xe0,0xde,0xdc,
0xda,0xd8,0xd5,0xd3,0xd1,0xce,0xcc,0xc9,0xc7,0xc4,0xc1,0xbf,0xbc,0xb9,0xb6,0xb3,
0xb0,0xae,0xab,0xa8,0xa5,0xa2,0x9f,0x9c,0x98,0x95,0x92,0x8f,0x8c,0x89,0x86,0x83,
0x80,0x7c,0x79,0x76,0x73,0x70,0x6d,0x6a,0x67,0x63,0x60,0x5d,0x5a,0x57,0x54,0x51,
0x4f,0x4c,0x49,0x46,0x43,0x40,0x3e,0x3b,0x38,0x36,0x33,0x31,0x2e,0x2c,0x2a,0x27,
0x25,0x23,0x21,0x1f,0x1d,0x1b,0x19,0x17,0x15,0x13,0x12,0x10,0x0f,0x0d,0x0c,0x0a,
0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x03,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x05,0x06,0x07,0x08,
0x09,0x0a,0x0c,0x0d,0x0f,0x10,0x12,0x13,0x15,0x17,0x19,0x1b,0x1d,0x1f,0x21,0x23,
0x25,0x27,0x2a,0x2c,0x2e,0x31,0x33,0x36,0x38,0x3b,0x3e,0x40,0x43,0x46,0x49,0x4c,
0x4f,0x51,0x54,0x57,0x5a,0x5d,0x60,0x63,0x67,0x6a,0x6d,0x70,0x73,0x76,0x79,0x7c};       //Tabulated arbitrary sine wave data (256 values)

uint32_t timestamp = 0;                                                                 //Timestamp as an unsigned 32 bit int  
unsigned long last = 0;                                                                 //Represents timestamp of last iteration through loop             
int32_t adc_0 = 0;                                                                      //ADC channel 0 as a 32 bit int
byte output[20];                                                                        //Output signal as an array of 20 bytes
int i = 0;                                                                              //Index of sine wave data array

void setup() {                  
  memset(output, 0, sizeof(output));                                                    //Initializes all values in output to 0
  Serial.begin(250000);
}

void loop() {
  if(millis()-last >= interval) {                                                       //Loop runs every 100ms
    last = millis();
    timestamp = last;
    adc_0 = sinewave_data[i];                                                           //Sets adc_0 to next sinewave_data value
    i++;                                                                                //Increment index
    if (i == sizeof(sinewave_data)) {                                                   //Resets index when it reaches 256 to loop to beginning of sine wave
      i = 0;
    }
    output[3] = timestamp & 0xFF;                                                       //Setting bytes 0-3 to the timestamp
    output[2] = (timestamp>>8) & 0xFF;
    output[1] = (timestamp>>16) & 0xFF;
    output[0] = (timestamp>>24) & 0xFF;
  
    output[15] = adc_0 & 0xFF;                                                          //Setting bytes 12-15 to sine wave data
    output[14] = (adc_0>>8) & 0xFF;
    output[13] = (adc_0>>16) & 0xFF;
    output[12] = (adc_0>>24) &0xFF;
  
    Serial.write(output, 20);                                                           //Writing 20 bytes of output
  }  
}
